{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Result = function Result(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var score = route.params.score;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.subContainer,\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 50\n        },\n        children: \"Your Score\"\n      }), _jsxs(View, {\n        style: styles.textWrapper,\n        children: [_jsx(Text, {\n          style: styles.score,\n          children: score\n        }), _jsx(Text, {\n          style: styles.score,\n          children: \" / 3\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"Welcome\");\n        },\n        style: styles.btnReset,\n        children: _jsx(Text, {\n          style: styles.btnText,\n          children: \"Retry\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#38588b\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  subContainer: {\n    backgroundColor: \"#38588b\",\n    width: \"90%\",\n    borderRadius: 20,\n    padding: 20,\n    alignItems: \"center\"\n  },\n  textWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 30\n  },\n  score: {\n    fontSize: 100,\n    color: \"#ffffff\",\n    fontWeight: \"bold\"\n  },\n  btnReset: {\n    backgroundColor: \"#333\",\n    paddingHorizontal: 5,\n    paddingVertical: 15,\n    width: \"50%\",\n    borderRadius: 15\n  },\n  btnText: {\n    textAlign: \"center\",\n    color: \"#ffffff\",\n    fontSize: 20,\n    letterSpacing: 1\n  }\n});\nexport default Result;","map":{"version":3,"names":["Result","_ref","navigation","route","score","params","_jsx","View","style","styles","container","children","_jsxs","subContainer","Text","fontSize","textWrapper","TouchableOpacity","onPress","navigate","btnReset","btnText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","borderRadius","padding","flexDirection","marginVertical","color","fontWeight","paddingHorizontal","paddingVertical","textAlign","letterSpacing"],"sources":["C:/Users/Pragati Tripathi/Desktop/Quiz-App/ReactNative-QuizApp/app/screens/Result.js"],"sourcesContent":["import { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n\r\nconst Result = ({ navigation, route }) => {\r\n  const { score } = route.params;\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.subContainer}>\r\n        <Text style={{ fontSize: 50 }}>Your Score</Text>\r\n\r\n        <View style={styles.textWrapper}>\r\n          <Text style={styles.score}>{score}</Text>\r\n          <Text style={styles.score}> / 3</Text>\r\n        </View>\r\n        {/* Retry Quiz button */}\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate(\"Welcome\");\r\n          }}\r\n          style={styles.btnReset}\r\n        >\r\n          <Text style={styles.btnText}>Retry</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#38588b\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  subContainer: {\r\n    backgroundColor: \"#38588b\",\r\n    width: \"90%\",\r\n    borderRadius: 20,\r\n    padding: 20,\r\n    alignItems: \"center\",\r\n  },\r\n  textWrapper: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    marginVertical: 30,\r\n  },\r\n  score: {\r\n    fontSize: 100,\r\n    color: \"#ffffff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  btnReset: {\r\n    backgroundColor: \"#333\",\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 15,\r\n    width: \"50%\",\r\n    borderRadius: 15,\r\n  },\r\n  btnText: {\r\n    textAlign: \"center\",\r\n    color: \"#ffffff\",\r\n    fontSize: 20,\r\n    letterSpacing: 1,\r\n  },\r\n});\r\nexport default Result;\r\n"],"mappings":";;;;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EACjC,IAAQC,KAAK,GAAKD,KAAK,CAACE,MAAM,CAAtBD,KAAK;EACb,OACEE,IAAA,CAACC,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BC,KAAA,CAACL,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACI,YAAa;MAAAF,QAAA,GAC/BL,IAAA,CAACQ,IAAI;QAACN,KAAK,EAAE;UAAEO,QAAQ,EAAE;QAAG,CAAE;QAAAJ,QAAA,EAAC;MAAU,CAAM,CAAC,EAEhDC,KAAA,CAACL,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACO,WAAY;QAAAL,QAAA,GAC9BL,IAAA,CAACQ,IAAI;UAACN,KAAK,EAAEC,MAAM,CAACL,KAAM;UAAAO,QAAA,EAAEP;QAAK,CAAO,CAAC,EACzCE,IAAA,CAACQ,IAAI;UAACN,KAAK,EAAEC,MAAM,CAACL,KAAM;UAAAO,QAAA,EAAC;QAAI,CAAM,CAAC;MAAA,CAClC,CAAC,EAEPL,IAAA,CAACW,gBAAgB;QACfC,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbhB,UAAU,CAACiB,QAAQ,CAAC,SAAS,CAAC;QAChC,CAAE;QACFX,KAAK,EAAEC,MAAM,CAACW,QAAS;QAAAT,QAAA,EAEvBL,IAAA,CAACQ,IAAI;UAACN,KAAK,EAAEC,MAAM,CAACY,OAAQ;UAAAV,QAAA,EAAC;QAAK,CAAM;MAAC,CACzB,CAAC;IAAA,CACf;EAAC,CACH,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDd,YAAY,EAAE;IACZY,eAAe,EAAE,SAAS;IAC1BG,KAAK,EAAE,KAAK;IACZC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXJ,UAAU,EAAE;EACd,CAAC;EACDV,WAAW,EAAE;IACXe,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE,YAAY;IAC5BD,UAAU,EAAE,QAAQ;IACpBM,cAAc,EAAE;EAClB,CAAC;EACD5B,KAAK,EAAE;IACLW,QAAQ,EAAE,GAAG;IACbkB,KAAK,EAAE,SAAS;IAChBC,UAAU,EAAE;EACd,CAAC;EACDd,QAAQ,EAAE;IACRK,eAAe,EAAE,MAAM;IACvBU,iBAAiB,EAAE,CAAC;IACpBC,eAAe,EAAE,EAAE;IACnBR,KAAK,EAAE,KAAK;IACZC,YAAY,EAAE;EAChB,CAAC;EACDR,OAAO,EAAE;IACPgB,SAAS,EAAE,QAAQ;IACnBJ,KAAK,EAAE,SAAS;IAChBlB,QAAQ,EAAE,EAAE;IACZuB,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AACF,eAAetC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}